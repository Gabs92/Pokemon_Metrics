library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(reshape2)
library(RColorBrewer)
library(ggrepel)
df = read.csv(file="data/pokemon.csv")
df = tbl_df(df)
colnames(df)[25] <- "classification"
df$capture_rate <- as.numeric(df$capture_rate)
head(df)
View(df)
typeof(df)
str(df)
#Revisión tipo de datos
str(df)
head(df)
summary(df)
# Resumen estadístico de las variables numéricas
cat("Resumen estadístico de las variables numéricas:\n")
summary(df)
colnames(df)
#¿Cuántos pokemones son lengarios?
# Filtrar el dataframe para obtener solo los pokémon legendarios
pokemones_legendarios <- df[df$Legendary == TRUE, ]
# Mostrar los pokémon legendarios
print(pokemones_legendarios)
#¿Cuántos pokemones son lengarios?
# Filtrar el dataframe para obtener solo los pokémon legendarios
pokemones_legendarios <- df[df$Legendary == "true", ]
# Mostrar los pokémon legendarios
print(pokemones_legendarios)
#¿Cuántos pokemones son lengarios?
# Filtrar el dataframe para obtener solo los pokémon legendarios
pokemones_legendarios <- df[df$Legendary == "True", ]
# Mostrar los pokémon legendarios
print(pokemones_legendarios)
# Número de pokémon por generación
pokemones_por_generacion <- table(df$Generation)
# Mostrar resultados en la consola
cat("Número de pokémon por generación:\n")
print(pokemones_por_generacion)
# Gráfico de barras para mostrar el número de pokémon por generación
barplot(pokemones_por_generacion, main = "Número de Pokémon por Generación",
xlab = "Generación", ylab = "Número de Pokémon", col = "lightblue")
# Número de pokémon por tipo (Type.1)
pokemones_por_tipo <- table(df$Type.1)
# Mostrar resultados en la consola
cat("\nNúmero de pokémon por tipo:\n")
print(pokemones_por_tipo)
# Gráfico de barras para mostrar el número de pokémon por tipo
barplot(pokemones_por_tipo, main = "Número de Pokémon por Tipo",
xlab = "Tipo", ylab = "Número de Pokémon", col = "lightgreen")
colnames(df)
# Número de pokémon por generación
pokemones_por_generacion <- table(df$Generation)
# Mostrar resultados en la consola
cat("Número de pokémon por generación:\n")
print(pokemones_por_generacion)
# Gráfico de barras para mostrar el número de pokémon por generación
barplot(pokemones_por_generacion, main = "Número de Pokémon por Generación",
xlab = "Generación", ylab = "Número de Pokémon", col = "lightblue")
# Agregar etiquetas a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 3, cex = 0.8, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 1, cex = 0.8, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 0, cex = 0.8, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 4, cex = 0.8, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 2, cex = 0.8, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 2, cex = 0.1, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 2:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 2, cex = 0.1, col = "black")
# Número de pokémon por tipo (Type.1)
pokemones_por_tipo <- table(df$Type.1)
# Gráfico de barras para mostrar el número de pokémon por generación
barplot(pokemones_por_generacion, main = "Número de Pokémon por Generación",
xlab = "Generación", ylab = "Número de Pokémon", col = "lightblue")
# Agregar etiquetas a las barras del gráfico
text(x = 2:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 2, cex = 0.1, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 2:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 2, cex = 0.5, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 2:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 3, cex = 1, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 2:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 3, cex = 2, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 2:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 3, cex = 0.7, col = "black")
# Gráfico de barras para mostrar el número de pokémon por generación
barplot(pokemones_por_generacion, main = "Número de Pokémon por Generación",
xlab = "Generación", ylab = "Número de Pokémon", col = "lightblue")
# Agregar etiquetas a las barras del gráfico
text(x = 2:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 3, cex = 0.7, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 2:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 1, cex = 0.7, col = "black")
# Gráfico de barras para mostrar el número de pokémon por generación
barplot(pokemones_por_generacion, main = "Número de Pokémon por Generación",
xlab = "Generación", ylab = "Número de Pokémon", col = "lightblue")
# Agregar etiquetas a las barras del gráfico
text(x = 2:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 1, cex = 0.7, col = "black")
# Gráfico de barras para mostrar el número de pokémon por generación
barplot(pokemones_por_generacion, main = "Número de Pokémon por Generación",
xlab = "Generación", ylab = "Número de Pokémon", col = "lightblue")
# Agregar etiquetas a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 1, cex = 0.7, col = "black")
# Número de pokémon por tipo (Type.1)
pokemones_por_tipo <- table(df$Type.1)
# Mostrar resultados en la consola
cat("\nNúmero de pokémon por tipo:\n")
print(pokemones_por_tipo)
# Gráfico de barras para mostrar el número de pokémon por tipo
barplot(pokemones_por_tipo, main = "Número de Pokémon por Tipo",
xlab = "Tipo", ylab = "Número de Pokémon", col = "lightgreen")
# Agregar etiquetas a las barras del gráfico
text(x = 1:length(pokemones_por_tipo),
y = pokemones_por_tipo,
label = pokemones_por_tipo,
pos = 3, cex = 0.7, col = "black")
# Agregar etiquetas en forma de globo o llamada a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 3, cex = 0.7, col = "black")
# Agregar globo o llamada a los valores
mtext(text = pokemones_por_generacion, side = 3, at = 1:length(pokemones_por_generacion),
line = -0.5, cex = 0.7, col = "black")
# Agregar etiquetas a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 1, cex = 0.7, col = "black")
# Gráfico de barras para mostrar el número de pokémon por generación
barplot(pokemones_por_generacion, main = "Número de Pokémon por Generación",
xlab = "Generación", ylab = "Número de Pokémon", col = "lightblue")
# Agregar etiquetas en forma de globo o llamada a las barras del gráfico
text(x = 1:length(pokemones_por_generacion),
y = pokemones_por_generacion,
label = pokemones_por_generacion,
pos = 3, cex = 0.7, col = "black")
# Agregar globo o llamada a los valores
mtext(text = pokemones_por_generacion, side = 3, at = 1:length(pokemones_por_generacion),
line = -0.5, cex = 0.7, col = "black")
library(plotly)
# Cargar la librería plotly
library(plotly)
# Número de pokémon por generación
pokemones_por_generacion <- table(df$Generation)
# Crear gráfico interactivo de barras para mostrar el número de pokémon por generación
plot_ly(x = names(pokemones_por_generacion),
y = pokemones_por_generacion,
type = "bar",
marker = list(color = "lightblue"),
text = pokemones_por_generacion,
hoverinfo = "text",
name = "Generación") %>%
layout(title = "Número de Pokémon por Generación",
xaxis = list(title = "Generación"),
yaxis = list(title = "Número de Pokémon"))
# Número de pokémon por tipo (Type.1)
pokemones_por_tipo <- table(df$Type.1)
# Crear gráfico interactivo de barras para mostrar el número de pokémon por tipo
plot_ly(x = names(pokemones_por_tipo),
y = pokemones_por_tipo,
type = "bar",
marker = list(color = "lightgreen"),
text = pokemones_por_tipo,
hoverinfo = "text",
name = "Tipo") %>%
layout(title = "Número de Pokémon por Tipo",
xaxis = list(title = "Tipo"),
yaxis = list(title = "Número de Pokémon"))
density_hp <- ggplot(data=df, aes(hp)) + geom_density(col="white",fill="pink", alpha=0.8) + ggtitle("Density Plot of HP")
density_speed <- ggplot(data=df, aes(speed)) + geom_density(col="white", fill="darkorchid", alpha=0.8) + ggtitle("Density Plot of Speed Characterstics")
density_attack <- ggplot(data=df, aes(attack)) + geom_density(col="white", fill="orange", alpha=0.7) + ggtitle("Density Plot of Attack Characterstics")
density_defense <- ggplot(data=df, aes(defense)) + geom_density(col="white", fill="firebrick", alpha=0.7) + ggtitle("Density Plot of Defense Characterstics")
density_height <- ggplot(data=df, aes(height_m)) + geom_density(col="white", fill="slateblue1", alpha=0.8) + ggtitle("Density Plot of Height (m) ")
density_weight <- ggplot(data=df, aes(weight_kg)) + geom_density(col="white", fill="mediumturquoise", alpha=0.8) + ggtitle("Density Plot of Weight (kg)")
grid.arrange(density_hp, density_speed, density_attack, density_defense, density_height, density_weight, ncol=2)
grid.arrange(density_hp, density_speed, density_attack, density_defense, ncol=2)
density_hp <- ggplot(data=df, aes(HP)) + geom_density(col="white",fill="pink", alpha=0.8) + ggtitle("Density Plot of HP")
density_speed <- ggplot(data=df, aes(Speed)) + geom_density(col="white", fill="darkorchid", alpha=0.8) + ggtitle("Density Plot of Speed Characterstics")
density_attack <- ggplot(data=df, aes(Attack)) + geom_density(col="white", fill="orange", alpha=0.7) + ggtitle("Density Plot of Attack Characterstics")
density_defense <- ggplot(data=df, aes(Defense)) + geom_density(col="white", fill="firebrick", alpha=0.7) + ggtitle("Density Plot of Defense Characterstics")
grid.arrange(density_hp, density_speed, density_attack, density_defense, ncol=2)
#Tipos de pokemon según categoría
type_1_poke <- ggplot(data=df, aes(Type.1)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-1") + coord_flip()
type_2_poke <- ggplot(data=df, aes(Type.2)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-2") + coord_flip()
grid.arrange(type_1_poke, type_2_poke, ncol=2)
#tipos de pokemon lengendario según su tipo (categoría 1)
df %>%
filter(is_legendary==1) %>%
ggplot(aes(type1)) + geom_bar(aes(fill= ..count..)) +       theme(axis.text.x = element_text(angle=90, hjust=0)) +     ggtitle("Number of Legendary Pokemon Based on Type-1")
#tipos de pokemon lengendario según su tipo (categoría 1)
df %>%
filter(Legendary=="True") %>%
ggplot(aes(type1)) + geom_bar(aes(fill= ..count..)) +       theme(axis.text.x = element_text(angle=90, hjust=0)) +     ggtitle("Number of Legendary Pokemon Based on Type-1")
#tipos de pokemon lengendario según su tipo (categoría 1)
df %>%
filter(Legendary=="True") %>%
ggplot(aes(Type.1)) + geom_bar(aes(fill= ..count..)) +       theme(axis.text.x = element_text(angle=90, hjust=0)) +     ggtitle("Number of Legendary Pokemon Based on Type-1")
#tipos de pokemon lengendario según su tipo (categoría 1)
# Filtrar los pokémon legendarios
legendarios <- df %>% filter(Legendary == "True")
# Contar los tipos de pokémon legendarios por categoría (Type.1)
conteo_legendarios <- count(legendarios, Type.1)
# Crear el gráfico interactivo de barras
plot_ly(data = conteo_legendarios, x = ~Type.1, y = ~n, type = "bar",
marker = list(color = "blue", opacity = 0.8),
text = ~paste("Type.1: ", Type.1, "<br>Number: ", n),
hoverinfo = "text",
name = "Count of Legendary Pokémon") %>%
layout(title = "Number of Legendary Pokémon Based on Type-1",
xaxis = list(title = "Type-1"),
yaxis = list(title = "Count"))
#tipos de pokemon lengendario según su tipo (categoría 1)
# Filtrar los pokémon legendarios
legendarios <- df %>% filter(Legendary == "True")
# Contar los tipos de pokémon legendarios por categoría (Type.1)
conteo_legendarios <- count(legendarios, Type.1)
# Crear el gráfico interactivo de barras con orientación vertical del texto
plot_ly(data = conteo_legendarios, x = ~Type.1, y = ~n, type = "bar",
marker = list(color = "blue", opacity = 0.8),
text = ~paste("Type.1: ", Type.1, "<br>Number: ", n),
hoverinfo = "text",
name = "Count of Legendary Pokémon") %>%
layout(title = "Number of Legendary Pokémon Based on Type-1",
xaxis = list(title = "Type-1", tickangle = 0, tickmode = "array", tickvals = ~seq_along(Type.1), ticktext = ~Type.1),
yaxis = list(title = "Count"))
#tipos de pokemon lengendario según su tipo (categoría 1)
# Filtrar los pokémon legendarios
legendarios <- df %>% filter(Legendary == "True")
# Contar los tipos de pokémon legendarios por categoría (Type.1)
conteo_legendarios <- count(legendarios, Type.1)
# Crear el gráfico interactivo de barras con orientación vertical del texto
plot_ly(data = conteo_legendarios, x = ~Type.1, y = ~n, type = "bar",
marker = list(color = "blue", opacity = 0.8),
text = ~paste("Type.1: ", Type.1, "<br>Number: ", n),
hoverinfo = "text",
name = "Count of Legendary Pokémon") %>%
layout(title = "Number of Legendary Pokémon Based on Type-1",
xaxis = list(title = "Type-1", tickangle = -90, tickfont = list(size = 10)),
yaxis = list(title = "Count"))
# Crear el gráfico interactivo de barras con orientación vertical del texto
plot_ly(data = conteo_legendarios, x = ~Type.1, y = ~n, type = "bar",
marker = list(color = "blue", opacity = 0.8, textangle = -90),
text = ~paste("Type.1: ", Type.1, "<br>Number: ", n),
hoverinfo = "text",
name = "Count of Legendary Pokémon") %>%
layout(title = "Number of Legendary Pokémon Based on Type-1",
xaxis = list(title = "Type-1", tickangle = -90, tickfont = list(size = 10)),
yaxis = list(title = "Count"))
# Crear el gráfico interactivo de barras con orientación vertical del texto
plot_ly(data = conteo_legendarios, x = ~Type.1, y = ~n, type = "bar",
marker = list(color = "blue", opacity = 0.8, textangle = 90),
text = ~paste("Type.1: ", Type.1, "<br>Number: ", n),
hoverinfo = "text",
name = "Count of Legendary Pokémon") %>%
layout(title = "Number of Legendary Pokémon Based on Type-1",
xaxis = list(title = "Type-1", tickangle = -90, tickfont = list(size = 10)),
yaxis = list(title = "Count"))
# Crear el gráfico interactivo de barras con orientación vertical del texto
plot_ly(data = conteo_legendarios, x = ~Type.1, y = ~n, type = "bar",
marker = list(color = "blue", opacity = 0.8, textangle = 90),
text = ~paste("Type.1: ", Type.1, "<br>Number: ", n),
hoverinfo = "text",
name = "Count of Legendary Pokémon") %>%
layout(title = "Number of Legendary Pokémon Based on Type-1",
xaxis = list(title = "Type-1", tickangle = -90, tickfont = list(size = 10)),
yaxis = list(title = "Count"))
# Crear el gráfico interactivo de barras con orientación vertical del texto
plot_ly(data = conteo_legendarios, x = ~Type.1, y = ~n, type = "bar",
marker = list(color = "blue", opacity = 0.8, textangle = 1),
text = ~paste("Type.1: ", Type.1, "<br>Number: ", n),
hoverinfo = "text",
name = "Count of Legendary Pokémon") %>%
layout(title = "Number of Legendary Pokémon Based on Type-1",
xaxis = list(title = "Type-1", tickangle = -90, tickfont = list(size = 10)),
yaxis = list(title = "Count"))
#Tipos de pokemon según categoría
type_1_poke <- ggplot(data=df, aes(Type.1)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-1") + coord_flip()
type_2_poke <- ggplot(data=df, aes(Type.2)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-2") + coord_flip()
grid.arrange(type_1_poke, type_2_poke, ncol=2)
